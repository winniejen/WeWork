{
  "uid" : "fae1cb3949f2fae5",
  "name" : "通讯录页面",
  "fullName" : "test_cases.test_add_members.TestAddMembers#test_add_members_03",
  "historyId" : "d8589467da6737918fb3b50e9b7ee675",
  "time" : {
    "start" : 1630299754950,
    "stop" : 1630299755001,
    "duration" : 51
  },
  "status" : "failed",
  "statusMessage" : "Failed: 添加成员失败",
  "statusTrace" : "self = <page_objects.common_operations.CommonOperations object at 0x1064e0370>\ntext = '小星星'\n\n    def assert_text(self, text):\n        \"\"\"\n        断言页面源码中是否存在某关键字或关键字符串\n        :param text:\n        :return:\n        \"\"\"\n        try:\n>           assert text in self.driver.page_source\nE           AssertionError\n\n../page_objects/common_operations.py:211: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_cases.test_add_members.TestAddMembers object at 0x10659aee0>\ntest_cases = {'page': 'ContactsPage', 'steps': [{'action': 'assert_text', 'element_locator': None, 'input_content': '小星星', 'name': '断言添加成员成功'}], 'title': '通讯录页面'}\n\n    @allure.story(\"通过关键字驱动添加成员,yaml数据源\")\n    @pytest.mark.parametrize(\"test_cases\", add_members_testcases)\n    def test_add_members_03(self, test_cases):\n        test_steps = test_cases[\"steps\"]\n        case_tile = test_cases['title']\n        allure.dynamic.title(case_tile)\n        for test_step in test_steps:\n            step_name = test_step[\"name\"]\n            action = test_step[\"action\"]\n            element_locator = test_step[\"element_locator\"]\n            input_content = test_step[\"input_content\"]\n            with allure.step(step_name):\n                try:\n                    func = getattr(self.key_words, action)\n                    if element_locator is None and input_content is None:\n                        func()\n                    elif element_locator is None and input_content is not None:\n>                       func(input_content)\n\ntest_add_members.py:147: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <page_objects.common_operations.CommonOperations object at 0x1064e0370>\ntext = '小星星'\n\n    def assert_text(self, text):\n        \"\"\"\n        断言页面源码中是否存在某关键字或关键字符串\n        :param text:\n        :return:\n        \"\"\"\n        try:\n            assert text in self.driver.page_source\n        except AssertionError as e:\n>           raise AssertionError(e)\nE           AssertionError\n\n../page_objects/common_operations.py:213: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_cases.test_add_members.TestAddMembers object at 0x10659aee0>\ntest_cases = {'page': 'ContactsPage', 'steps': [{'action': 'assert_text', 'element_locator': None, 'input_content': '小星星', 'name': '断言添加成员成功'}], 'title': '通讯录页面'}\n\n    @allure.story(\"通过关键字驱动添加成员,yaml数据源\")\n    @pytest.mark.parametrize(\"test_cases\", add_members_testcases)\n    def test_add_members_03(self, test_cases):\n        test_steps = test_cases[\"steps\"]\n        case_tile = test_cases['title']\n        allure.dynamic.title(case_tile)\n        for test_step in test_steps:\n            step_name = test_step[\"name\"]\n            action = test_step[\"action\"]\n            element_locator = test_step[\"element_locator\"]\n            input_content = test_step[\"input_content\"]\n            with allure.step(step_name):\n                try:\n                    func = getattr(self.key_words, action)\n                    if element_locator is None and input_content is None:\n                        func()\n                    elif element_locator is None and input_content is not None:\n                        func(input_content)\n                    elif element_locator is not None and input_content is None:\n                        print(\"执行分支3\")\n                        func(*element_locator)\n                    else:\n                        func(*element_locator, input_content)\n                except Exception as e:\n>                   pytest.fail(f\"添加成员失败\")\nE                   Failed: 添加成员失败\n\ntest_add_members.py:154: Failed",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "xunit_setup_class_fixture_TestAddMembers",
    "time" : {
      "start" : 1630299752061,
      "stop" : 1630299752070,
      "duration" : 9
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "Failed: 添加成员失败",
    "statusTrace" : "self = <page_objects.common_operations.CommonOperations object at 0x1064e0370>\ntext = '小星星'\n\n    def assert_text(self, text):\n        \"\"\"\n        断言页面源码中是否存在某关键字或关键字符串\n        :param text:\n        :return:\n        \"\"\"\n        try:\n>           assert text in self.driver.page_source\nE           AssertionError\n\n../page_objects/common_operations.py:211: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_cases.test_add_members.TestAddMembers object at 0x10659aee0>\ntest_cases = {'page': 'ContactsPage', 'steps': [{'action': 'assert_text', 'element_locator': None, 'input_content': '小星星', 'name': '断言添加成员成功'}], 'title': '通讯录页面'}\n\n    @allure.story(\"通过关键字驱动添加成员,yaml数据源\")\n    @pytest.mark.parametrize(\"test_cases\", add_members_testcases)\n    def test_add_members_03(self, test_cases):\n        test_steps = test_cases[\"steps\"]\n        case_tile = test_cases['title']\n        allure.dynamic.title(case_tile)\n        for test_step in test_steps:\n            step_name = test_step[\"name\"]\n            action = test_step[\"action\"]\n            element_locator = test_step[\"element_locator\"]\n            input_content = test_step[\"input_content\"]\n            with allure.step(step_name):\n                try:\n                    func = getattr(self.key_words, action)\n                    if element_locator is None and input_content is None:\n                        func()\n                    elif element_locator is None and input_content is not None:\n>                       func(input_content)\n\ntest_add_members.py:147: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <page_objects.common_operations.CommonOperations object at 0x1064e0370>\ntext = '小星星'\n\n    def assert_text(self, text):\n        \"\"\"\n        断言页面源码中是否存在某关键字或关键字符串\n        :param text:\n        :return:\n        \"\"\"\n        try:\n            assert text in self.driver.page_source\n        except AssertionError as e:\n>           raise AssertionError(e)\nE           AssertionError\n\n../page_objects/common_operations.py:213: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_cases.test_add_members.TestAddMembers object at 0x10659aee0>\ntest_cases = {'page': 'ContactsPage', 'steps': [{'action': 'assert_text', 'element_locator': None, 'input_content': '小星星', 'name': '断言添加成员成功'}], 'title': '通讯录页面'}\n\n    @allure.story(\"通过关键字驱动添加成员,yaml数据源\")\n    @pytest.mark.parametrize(\"test_cases\", add_members_testcases)\n    def test_add_members_03(self, test_cases):\n        test_steps = test_cases[\"steps\"]\n        case_tile = test_cases['title']\n        allure.dynamic.title(case_tile)\n        for test_step in test_steps:\n            step_name = test_step[\"name\"]\n            action = test_step[\"action\"]\n            element_locator = test_step[\"element_locator\"]\n            input_content = test_step[\"input_content\"]\n            with allure.step(step_name):\n                try:\n                    func = getattr(self.key_words, action)\n                    if element_locator is None and input_content is None:\n                        func()\n                    elif element_locator is None and input_content is not None:\n                        func(input_content)\n                    elif element_locator is not None and input_content is None:\n                        print(\"执行分支3\")\n                        func(*element_locator)\n                    else:\n                        func(*element_locator, input_content)\n                except Exception as e:\n>                   pytest.fail(f\"添加成员失败\")\nE                   Failed: 添加成员失败\n\ntest_add_members.py:154: Failed",
    "steps" : [ {
      "name" : "断言添加成员成功",
      "time" : {
        "start" : 1630299754950,
        "stop" : 1630299754980,
        "duration" : 30
      },
      "status" : "failed",
      "statusMessage" : "Failed: 添加成员失败\n",
      "statusTrace" : "  File \"/Volumes/Data/AutomationTest/WeWorkFrameWork/test_cases/test_add_members.py\", line 154, in test_add_members_03\n    pytest.fail(f\"添加成员失败\")\n  File \"/Volumes/Data/AutomationTest/WeWorkFrameWork/venv/lib/python3.9/site-packages/_pytest/outcomes.py\", line 153, in fail\n    raise Failed(msg=msg, pytrace=pytrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "cd4196b4b06828c",
      "name" : "log",
      "source" : "cd4196b4b06828c.txt",
      "type" : "text/plain",
      "size" : 489
    } ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "xunit_setup_class_fixture_TestAddMembers::0",
    "time" : {
      "start" : 1630299755191,
      "stop" : 1630299755214,
      "duration" : 23
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "通过关键字驱动添加成员,yaml数据源"
  }, {
    "name" : "feature",
    "value" : "添加成员"
  }, {
    "name" : "parentSuite",
    "value" : "test_cases"
  }, {
    "name" : "suite",
    "value" : "test_add_members"
  }, {
    "name" : "subSuite",
    "value" : "TestAddMembers"
  }, {
    "name" : "host",
    "value" : "macdeMacBook-Pro.local"
  }, {
    "name" : "thread",
    "value" : "2378-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_cases.test_add_members"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "test_cases",
    "value" : "{'title': '通讯录页面', 'page': 'ContactsPage', 'steps': [{'name': '断言添加成员成功', 'action': 'assert_text', 'element_locator': None, 'input_content': '小星星'}]}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "fae1cb3949f2fae5.json",
  "parameterValues" : [ "{'title': '通讯录页面', 'page': 'ContactsPage', 'steps': [{'name': '断言添加成员成功', 'action': 'assert_text', 'element_locator': None, 'input_content': '小星星'}]}" ]
}